
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Oct 30 20:18:09 CST 2019
//----------------------------------------------------

package lexanalyzer;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Oct 30 20:18:09 CST 2019
  */
public class Syntax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Syntax() {super();}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u013f\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\004\000\002\002\004" +
    "\000\002\002\004\000\002\002\004\000\002\002\004\000" +
    "\002\002\004\000\002\003\004\000\002\003\004\000\002" +
    "\003\004\000\002\003\004\000\002\003\004\000\002\003" +
    "\004\000\002\003\004\000\002\003\004\000\002\003\004" +
    "\000\002\003\002\000\002\204\005\000\002\205\005\000" +
    "\002\205\003\000\002\206\004\000\002\206\003\000\002" +
    "\207\005\000\002\210\007\000\002\210\002\000\002\211" +
    "\010\000\002\211\002\000\002\212\003\000\002\212\002" +
    "\000\002\213\006\000\002\213\004\000\002\214\004\000" +
    "\002\214\004\000\002\214\004\000\002\214\004\000\002" +
    "\214\004\000\002\214\004\000\002\214\004\000\002\214" +
    "\004\000\002\214\002\000\002\004\005\000\002\172\007" +
    "\000\002\172\003\000\002\173\004\000\002\173\003\000" +
    "\002\174\004\000\002\174\005\000\002\175\010\000\002" +
    "\202\004\000\002\202\002\000\002\201\005\000\002\201" +
    "\002\000\002\203\005\000\002\203\002\000\002\200\004" +
    "\000\002\200\002\000\002\177\005\000\002\177\002\000" +
    "\002\005\005\000\002\153\007\000\002\153\003\000\002" +
    "\154\004\000\002\154\003\000\002\155\004\000\002\155" +
    "\003\000\002\156\004\000\002\156\005\000\002\157\005" +
    "\000\002\157\003\000\002\157\005\000\002\161\004\000" +
    "\002\161\002\000\002\171\003\000\002\171\010\000\002" +
    "\160\004\000\002\160\007\000\002\162\005\000\002\162" +
    "\003\000\002\163\004\000\002\163\002\000\002\164\004" +
    "\000\002\164\002\000\002\165\005\000\002\165\004\000" +
    "\002\166\004\000\002\166\002\000\002\167\005\000\002" +
    "\167\002\000\002\006\005\000\002\127\004\000\002\127" +
    "\005\000\002\127\004\000\002\127\005\000\002\132\003" +
    "\000\002\151\006\000\002\151\004\000\002\133\003\000" +
    "\002\133\003\000\002\131\007\000\002\131\003\000\002" +
    "\141\004\000\002\141\004\000\002\141\005\000\002\142" +
    "\006\000\002\142\005\000\002\142\004\000\002\142\003" +
    "\000\002\142\006\000\002\147\004\000\002\147\002\000" +
    "\002\144\004\000\002\145\007\000\002\145\006\000\002" +
    "\145\005\000\002\145\004\000\002\145\007\000\002\145" +
    "\002\000\002\136\004\000\002\136\003\000\002\137\005" +
    "\000\002\137\003\000\002\140\003\000\002\140\004\000" +
    "\002\140\002\000\002\130\010\000\002\130\005\000\002" +
    "\134\005\000\002\134\002\000\002\135\004\000\002\135" +
    "\002\000\002\012\005\000\002\072\004\000\002\072\004" +
    "\000\002\072\005\000\002\072\004\000\002\120\006\000" +
    "\002\120\004\000\002\120\002\000\002\125\003\000\002" +
    "\125\002\000\002\121\004\000\002\121\002\000\002\122" +
    "\015\000\002\126\003\000\002\126\003\000\002\123\006" +
    "\000\002\123\002\000\002\124\004\000\002\124\002\000" +
    "\002\073\004\000\002\073\003\000\002\074\003\000\002" +
    "\074\003\000\002\075\007\000\002\076\004\000\002\077" +
    "\005\000\002\100\003\000\002\100\003\000\002\100\002" +
    "\000\002\101\004\000\002\101\003\000\002\102\007\000" +
    "\002\103\005\000\002\103\002\000\002\104\004\000\002" +
    "\105\006\000\002\106\006\000\002\106\003\000\002\106" +
    "\003\000\002\107\003\000\002\107\003\000\002\107\006" +
    "\000\002\107\003\000\002\110\004\000\002\110\002\000" +
    "\002\111\011\000\002\111\004\000\002\111\003\000\002" +
    "\111\006\000\002\111\002\000\002\116\003\000\002\116" +
    "\004\000\002\116\002\000\002\112\007\000\002\117\004" +
    "\000\002\117\002\000\002\113\005\000\002\113\004\000" +
    "\002\113\004\000\002\113\003\000\002\114\006\000\002" +
    "\115\004\000\002\115\002\000\002\007\012\000\002\070" +
    "\005\000\002\070\010\000\002\070\002\000\002\066\002" +
    "\000\002\066\011\000\002\066\004\000\002\067\006\000" +
    "\002\067\010\000\002\067\002\000\002\061\004\000\002" +
    "\061\004\000\002\061\007\000\002\065\003\000\002\065" +
    "\003\000\002\071\003\000\002\071\003\000\002\071\003" +
    "\000\002\071\003\000\002\071\003\000\002\071\003\000" +
    "\002\062\005\000\002\062\005\000\002\062\010\000\002" +
    "\062\005\000\002\062\002\000\002\063\004\000\002\064" +
    "\006\000\002\064\002\000\002\013\006\000\002\010\003" +
    "\000\002\011\006\000\002\011\006\000\002\011\006\000" +
    "\002\011\006\000\002\011\006\000\002\037\003\000\002" +
    "\040\005\000\002\040\003\000\002\045\004\000\002\045" +
    "\006\000\002\045\010\000\002\046\005\000\002\046\007" +
    "\000\002\046\011\000\002\046\002\000\002\043\005\000" +
    "\002\043\003\000\002\044\006\000\002\044\003\000\002" +
    "\055\003\000\002\055\005\000\002\055\007\000\002\056" +
    "\004\000\002\056\002\000\002\041\005\000\002\041\003" +
    "\000\002\051\004\000\002\047\005\000\002\047\002\000" +
    "\002\042\005\000\002\042\003\000\002\050\005\000\002" +
    "\050\003\000\002\052\004\000\002\053\004\000\002\053" +
    "\002\000\002\014\011\000\002\014\005\000\002\015\004" +
    "\000\002\015\003\000\002\016\004\000\002\016\004\000" +
    "\002\017\003\000\002\017\005\000\002\017\007\000\002" +
    "\017\011\000\002\020\010\000\002\020\003\000\002\021" +
    "\012\000\002\021\016\000\002\022\003\000\002\022\005" +
    "\000\002\022\007\000\002\022\003\000\002\023\006\000" +
    "\002\023\003\000\002\024\004\000\002\025\005\000\002" +
    "\025\002\000\002\026\004\000\002\026\003\000\002\027" +
    "\007\000\002\027\007\000\002\027\007\000\002\030\005" +
    "\000\002\030\005\000\002\030\005\000\002\030\002\000" +
    "\002\031\007\000\002\031\007\000\002\031\007\000\002" +
    "\031\002\000\002\032\003\000\002\032\003\000\002\032" +
    "\005\000\002\032\004\000\002\032\005\000\002\032\004" +
    "\000\002\032\004\000\002\032\003\000\002\032\005\000" +
    "\002\032\005\000\002\060\003\000\002\060\004\000\002" +
    "\033\003\000\002\033\003\000\002\033\003\000\002\035" +
    "\007\000\002\036\003\000\002\036\003\000\002\036\002" +
    "\000\002\215\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0290\000\022\015\017\020\026\023\021\101\025\104" +
    "\006\127\014\135\012\141\013\001\002\000\024\002\uffee" +
    "\015\017\020\026\023\021\101\025\104\006\127\014\135" +
    "\012\141\013\001\002\000\024\002\uffee\015\017\020\026" +
    "\023\021\101\025\104\006\127\014\135\012\141\013\001" +
    "\002\000\004\063\u028e\001\002\000\024\002\uffee\015\017" +
    "\020\026\023\021\101\025\104\006\127\014\135\012\141" +
    "\013\001\002\000\024\002\uffee\015\017\020\026\023\021" +
    "\101\025\104\006\127\014\135\012\141\013\001\002\000" +
    "\024\002\uffee\015\017\020\026\023\021\101\025\104\006" +
    "\127\014\135\012\141\013\001\002\000\012\012\u0268\016" +
    "\u026e\021\u026c\047\036\001\002\000\010\012\u0238\021\u023a" +
    "\047\036\001\002\000\012\061\u01e4\062\u01e2\063\u01e1\102" +
    "\u01e5\001\002\000\024\002\uffee\015\017\020\026\023\021" +
    "\101\025\104\006\127\014\135\012\141\013\001\002\000" +
    "\004\002\u01df\001\002\000\042\004\134\005\136\006\133" +
    "\012\124\044\126\047\135\050\121\051\131\052\137\065" +
    "\u019f\070\u01a2\071\u019e\072\u01a6\073\u019d\074\u01a3\075\u01a0" +
    "\001\002\000\024\002\uffee\015\017\020\026\023\021\101" +
    "\025\104\006\127\014\135\012\141\013\001\002\000\014" +
    "\057\u0154\060\u0155\061\u0156\062\u0153\063\u0152\001\002\000" +
    "\030\002\uff1f\015\uff1f\020\uff1f\023\uff1f\046\uff1f\101\uff1f" +
    "\104\uff1f\127\uff1f\135\uff1f\141\uff1f\144\uff1f\001\002\000" +
    "\024\002\uffee\015\017\020\026\023\021\101\025\104\006" +
    "\127\014\135\012\141\013\001\002\000\024\002\uffee\015" +
    "\017\020\026\023\021\101\025\104\006\127\014\135\012" +
    "\141\013\001\002\000\024\034\234\047\036\062\235\063" +
    "\240\102\237\103\236\105\232\106\231\142\230\001\002" +
    "\000\014\017\035\021\037\024\027\025\040\047\036\001" +
    "\002\000\004\004\220\001\002\000\004\046\ufef7\001\002" +
    "\000\004\046\072\001\002\000\010\004\104\026\103\027" +
    "\105\001\002\000\010\004\104\026\103\027\105\001\002" +
    "\000\010\004\ufeef\026\ufeef\027\ufeef\001\002\000\010\024" +
    "\027\025\040\047\036\001\002\000\062\004\ufef4\007\ufef4" +
    "\012\ufef4\022\ufef4\023\ufef4\026\ufef4\027\ufef4\031\ufef4\033" +
    "\ufef4\046\ufef4\047\ufef4\056\073\064\ufef4\066\ufef4\076\ufef4" +
    "\100\ufef4\110\ufef4\111\ufef4\123\ufef4\127\ufef4\130\ufef4\132" +
    "\ufef4\137\ufef4\140\ufef4\001\002\000\004\004\065\001\002" +
    "\000\004\004\041\001\002\000\004\052\042\001\002\000" +
    "\004\007\043\001\002\000\004\052\044\001\002\000\006" +
    "\007\046\010\045\001\002\000\004\052\057\001\002\000" +
    "\006\047\051\052\047\001\002\000\004\011\ufee9\001\002" +
    "\000\004\011\056\001\002\000\006\011\ufeec\056\052\001" +
    "\002\000\004\047\053\001\002\000\006\011\ufeeb\056\054" +
    "\001\002\000\004\047\055\001\002\000\004\011\ufeea\001" +
    "\002\000\010\004\ufeee\026\ufeee\027\ufeee\001\002\000\004" +
    "\010\060\001\002\000\004\052\061\001\002\000\004\007" +
    "\062\001\002\000\006\047\051\052\047\001\002\000\004" +
    "\011\064\001\002\000\010\004\ufeed\026\ufeed\027\ufeed\001" +
    "\002\000\004\051\066\001\002\000\004\011\067\001\002" +
    "\000\012\017\035\024\027\025\040\047\036\001\002\000" +
    "\004\046\072\001\002\000\030\002\ufefa\015\ufefa\020\ufefa" +
    "\023\ufefa\046\ufefa\101\ufefa\104\ufefa\127\ufefa\135\ufefa\141" +
    "\ufefa\144\ufefa\001\002\000\030\002\ufec3\015\ufec3\020\ufec3" +
    "\023\ufec3\046\ufec3\101\ufec3\104\ufec3\127\ufec3\135\ufec3\141" +
    "\ufec3\144\ufec3\001\002\000\004\047\074\001\002\000\062" +
    "\004\ufef3\007\ufef3\012\ufef3\022\ufef3\023\ufef3\026\ufef3\027" +
    "\ufef3\031\ufef3\033\ufef3\046\ufef3\047\ufef3\056\075\064\ufef3" +
    "\066\ufef3\076\ufef3\100\ufef3\110\ufef3\111\ufef3\123\ufef3\127" +
    "\ufef3\130\ufef3\132\ufef3\137\ufef3\140\ufef3\001\002\000\004" +
    "\047\076\001\002\000\064\004\ufef2\007\ufef2\012\ufef2\022" +
    "\ufef2\023\ufef2\026\ufef2\027\ufef2\031\ufef2\033\ufef2\046\ufef2" +
    "\047\ufef2\054\ufef2\056\077\064\ufef2\066\ufef2\076\ufef2\100" +
    "\ufef2\110\ufef2\111\ufef2\123\ufef2\127\ufef2\130\ufef2\132\ufef2" +
    "\137\ufef2\140\ufef2\001\002\000\004\047\100\001\002\000" +
    "\062\004\ufef1\007\ufef1\012\ufef1\022\ufef1\023\ufef1\026\ufef1" +
    "\027\ufef1\031\ufef1\033\ufef1\046\ufef1\047\ufef1\054\ufef1\064" +
    "\ufef1\066\ufef1\076\ufef1\100\ufef1\110\ufef1\111\ufef1\123\ufef1" +
    "\127\ufef1\130\ufef1\132\ufef1\137\ufef1\140\ufef1\001\002\000" +
    "\004\046\ufef8\001\002\000\004\046\ufee7\001\002\000\004" +
    "\004\117\001\002\000\004\047\110\001\002\000\004\046" +
    "\ufee2\001\002\000\004\046\ufef6\001\002\000\004\011\115" +
    "\001\002\000\006\007\111\011\ufee4\001\002\000\004\047" +
    "\113\001\002\000\004\011\ufee6\001\002\000\006\007\111" +
    "\011\ufee4\001\002\000\004\011\ufee5\001\002\000\006\026" +
    "\103\027\105\001\002\000\004\046\ufee8\001\002\000\030" +
    "\004\134\005\136\006\133\012\124\030\125\031\140\044" +
    "\126\047\135\050\121\051\131\052\137\001\002\000\004" +
    "\046\ufee3\001\002\000\024\007\ufec9\011\ufec9\016\ufec9\022" +
    "\ufec9\046\ufec9\076\ufec9\100\ufec9\130\ufec9\137\ufec9\001\002" +
    "\000\004\054\ufecc\001\002\000\024\007\ufecf\011\ufecf\016" +
    "\ufecf\022\ufecf\046\ufecf\076\ufecf\100\ufecf\130\ufecf\137\ufecf" +
    "\001\002\000\004\047\215\001\002\000\006\007\141\011" +
    "\ufedb\001\002\000\004\004\204\001\002\000\004\054\201" +
    "\001\002\000\024\007\ufed6\011\ufed6\016\ufed6\022\ufed6\046" +
    "\ufed6\076\ufed6\100\ufed6\130\ufed6\137\ufed6\001\002\000\024" +
    "\007\ufec8\011\ufec8\016\ufec8\022\ufec8\046\ufec8\076\ufec8\100" +
    "\ufec8\130\ufec8\137\ufec8\001\002\000\006\007\141\011\ufedb" +
    "\001\002\000\024\004\134\005\136\006\133\012\124\044" +
    "\126\047\135\050\121\051\131\052\137\001\002\000\024" +
    "\004\134\005\136\006\133\012\124\044\126\047\135\050" +
    "\121\051\131\052\137\001\002\000\030\007\ufed5\011\ufed5" +
    "\016\ufed5\022\ufed5\046\ufed5\054\ufef4\056\171\076\ufed5\100" +
    "\ufed5\130\ufed5\137\ufed5\001\002\000\024\004\134\005\136" +
    "\006\133\012\124\044\126\047\135\050\121\051\131\052" +
    "\137\001\002\000\024\007\ufeca\011\ufeca\016\ufeca\022\ufeca" +
    "\046\ufeca\076\ufeca\100\ufeca\130\ufeca\137\ufeca\001\002\000" +
    "\006\007\141\011\ufedb\001\002\000\030\004\134\005\136" +
    "\006\133\012\124\030\162\031\164\044\126\047\135\050" +
    "\121\051\131\052\137\001\002\000\004\011\143\001\002" +
    "\000\006\004\144\046\ufed7\001\002\000\030\004\134\005" +
    "\136\006\133\012\124\030\146\031\150\044\126\047\135" +
    "\050\121\051\131\052\137\001\002\000\004\046\ufee0\001" +
    "\002\000\006\007\141\011\ufedb\001\002\000\006\007\141" +
    "\011\ufedb\001\002\000\006\007\141\011\ufedb\001\002\000" +
    "\004\011\152\001\002\000\006\004\144\046\ufed7\001\002" +
    "\000\004\046\ufed9\001\002\000\004\011\155\001\002\000" +
    "\006\004\144\046\ufed7\001\002\000\004\046\ufed8\001\002" +
    "\000\004\011\160\001\002\000\006\004\144\046\ufed7\001" +
    "\002\000\004\046\ufeda\001\002\000\006\007\141\011\ufedb" +
    "\001\002\000\006\007\141\011\ufedb\001\002\000\006\007" +
    "\141\011\ufedb\001\002\000\004\011\ufedd\001\002\000\004" +
    "\011\ufedc\001\002\000\004\011\ufede\001\002\000\024\007" +
    "\ufed1\011\ufed1\016\ufed1\022\ufed1\046\ufed1\076\ufed1\100\ufed1" +
    "\130\ufed1\137\ufed1\001\002\000\004\047\172\001\002\000" +
    "\030\007\ufed4\011\ufed4\016\ufed4\022\ufed4\046\ufed4\054\ufef3" +
    "\056\075\076\ufed4\100\ufed4\130\ufed4\137\ufed4\001\002\000" +
    "\004\011\174\001\002\000\024\007\ufed2\011\ufed2\016\ufed2" +
    "\022\ufed2\046\ufed2\076\ufed2\100\ufed2\130\ufed2\137\ufed2\001" +
    "\002\000\024\007\ufed0\011\ufed0\016\ufed0\022\ufed0\046\ufed0" +
    "\076\ufed0\100\ufed0\130\ufed0\137\ufed0\001\002\000\004\011" +
    "\177\001\002\000\006\004\144\046\ufed7\001\002\000\004" +
    "\046\ufedf\001\002\000\026\004\134\005\136\006\133\012" +
    "\124\031\203\044\126\047\135\050\121\051\131\052\137" +
    "\001\002\000\024\007\ufece\011\ufece\016\ufece\022\ufece\046" +
    "\ufece\076\ufece\100\ufece\130\ufece\137\ufece\001\002\000\024" +
    "\007\ufecd\011\ufecd\016\ufecd\022\ufecd\046\ufecd\076\ufecd\100" +
    "\ufecd\130\ufecd\137\ufecd\001\002\000\030\004\ufec4\005\ufec4" +
    "\006\ufec4\012\ufec4\035\205\044\ufec4\045\207\047\ufec4\050" +
    "\ufec4\051\ufec4\052\ufec4\001\002\000\024\004\ufec6\005\ufec6" +
    "\006\ufec6\012\ufec6\044\ufec6\047\ufec6\050\ufec6\051\ufec6\052" +
    "\ufec6\001\002\000\024\004\134\005\136\006\133\012\124" +
    "\044\126\047\135\050\121\051\131\052\137\001\002\000" +
    "\024\004\ufec5\005\ufec5\006\ufec5\012\ufec5\044\ufec5\047\ufec5" +
    "\050\ufec5\051\ufec5\052\ufec5\001\002\000\004\011\211\001" +
    "\002\000\024\007\ufec7\011\ufec7\016\ufec7\022\ufec7\046\ufec7" +
    "\076\ufec7\100\ufec7\130\ufec7\137\ufec7\001\002\000\004\011" +
    "\213\001\002\000\006\004\144\046\ufed7\001\002\000\004" +
    "\046\ufee1\001\002\000\026\007\ufed3\011\ufed3\016\ufed3\022" +
    "\ufed3\046\ufed3\054\ufecb\076\ufed3\100\ufed3\130\ufed3\137\ufed3" +
    "\001\002\000\004\046\ufef5\001\002\000\030\002\ufef9\015" +
    "\ufef9\020\ufef9\023\ufef9\046\ufef9\101\ufef9\104\ufef9\127\ufef9" +
    "\135\ufef9\141\ufef9\144\ufef9\001\002\000\004\047\221\001" +
    "\002\000\004\007\222\001\002\000\004\052\223\001\002" +
    "\000\004\011\224\001\002\000\010\004\ufef0\026\ufef0\027" +
    "\ufef0\001\002\000\004\060\uff68\001\002\000\004\060\u0129" +
    "\001\002\000\004\046\072\001\002\000\004\047\036\001" +
    "\002\000\020\004\uff66\007\uff66\011\uff66\031\uff66\033\uff66" +
    "\046\uff66\060\uff66\001\002\000\020\004\uff67\007\uff67\011" +
    "\uff67\031\uff67\033\uff67\046\uff67\060\uff67\001\002\000\006" +
    "\012\u0102\100\uffe6\001\002\000\004\127\u0100\001\002\000" +
    "\004\047\036\001\002\000\006\105\232\106\231\001\002" +
    "\000\004\047\036\001\002\000\004\047\036\001\002\000" +
    "\004\046\uffe9\001\002\000\004\046\uffeb\001\002\000\004" +
    "\046\072\001\002\000\024\002\uffed\015\uffed\020\uffed\023" +
    "\uffed\101\uffed\104\uffed\127\uffed\135\uffed\141\uffed\001\002" +
    "\000\004\004\247\001\002\000\004\046\uff7b\001\002\000" +
    "\012\007\253\011\uff45\047\255\117\252\001\002\000\004" +
    "\046\uff5a\001\002\000\006\011\uff57\046\uff57\001\002\000" +
    "\004\047\326\001\002\000\004\117\252\001\002\000\004" +
    "\011\321\001\002\000\012\112\262\113\263\114\257\115" +
    "\260\001\002\000\006\011\uff56\046\uff56\001\002\000\024" +
    "\007\uff54\011\uff54\031\uff54\033\uff54\046\uff54\100\uff54\117" +
    "\uff54\121\uff54\137\uff54\001\002\000\024\007\uff52\011\uff52" +
    "\031\uff52\033\uff52\046\uff52\100\uff52\117\uff52\121\uff52\137" +
    "\uff52\001\002\000\020\007\uff4b\011\uff4b\031\273\033\267" +
    "\046\uff4b\117\272\121\270\001\002\000\024\007\uff55\011" +
    "\uff55\031\uff55\033\uff55\046\uff55\100\uff55\117\uff55\121\uff55" +
    "\137\uff55\001\002\000\004\004\264\001\002\000\004\051" +
    "\265\001\002\000\004\011\266\001\002\000\024\007\uff53" +
    "\011\uff53\031\uff53\033\uff53\046\uff53\100\uff53\117\uff53\121" +
    "\uff53\137\uff53\001\002\000\004\031\320\001\002\000\004" +
    "\004\312\001\002\000\010\007\310\011\uff50\046\uff50\001" +
    "\002\000\004\047\274\001\002\000\010\007\uff4d\011\uff4d" +
    "\046\uff4d\001\002\000\006\103\277\120\276\001\002\000" +
    "\014\007\uff48\011\uff48\031\305\033\304\046\uff48\001\002" +
    "\000\004\122\301\001\002\000\022\004\uff41\007\uff41\011" +
    "\uff41\031\uff41\033\uff41\046\uff41\105\232\106\231\001\002" +
    "\000\016\004\uff43\007\uff43\011\uff43\031\uff43\033\uff43\046" +
    "\uff43\001\002\000\022\004\uff42\007\uff42\011\uff42\031\uff42" +
    "\033\uff42\046\uff42\105\232\106\231\001\002\000\016\004" +
    "\uff44\007\uff44\011\uff44\031\uff44\033\uff44\046\uff44\001\002" +
    "\000\010\007\uff4c\011\uff4c\046\uff4c\001\002\000\004\031" +
    "\306\001\002\000\010\007\uff4a\011\uff4a\046\uff4a\001\002" +
    "\000\010\007\uff49\011\uff49\046\uff49\001\002\000\006\011" +
    "\uff58\046\uff58\001\002\000\014\007\253\011\uff45\046\uff45" +
    "\047\255\117\252\001\002\000\006\011\uff51\046\uff51\001" +
    "\002\000\004\051\313\001\002\000\004\007\314\001\002" +
    "\000\004\051\315\001\002\000\004\011\316\001\002\000" +
    "\014\007\uff48\011\uff48\031\305\033\304\046\uff48\001\002" +
    "\000\010\007\uff4f\011\uff4f\046\uff4f\001\002\000\010\007" +
    "\uff4e\011\uff4e\046\uff4e\001\002\000\006\046\uff3e\064\323" +
    "\001\002\000\004\046\uff59\001\002\000\004\120\324\001" +
    "\002\000\004\046\uff3f\001\002\000\006\011\uff46\046\uff46" +
    "\001\002\000\006\103\277\120\276\001\002\000\004\004" +
    "\331\001\002\000\010\007\253\011\uff45\046\uff45\001\002" +
    "\000\004\047\332\001\002\000\010\011\uff60\110\333\111" +
    "\334\001\002\000\012\007\uff62\011\uff62\046\uff62\116\uff62" +
    "\001\002\000\012\007\uff61\011\uff61\046\uff61\116\uff61\001" +
    "\002\000\004\011\336\001\002\000\010\007\uff40\011\uff40" +
    "\046\uff40\001\002\000\006\011\uff47\046\uff47\001\002\000" +
    "\004\046\uff7a\001\002\000\004\060\uff69\001\002\000\010" +
    "\046\uff75\064\343\123\344\001\002\000\006\004\uff73\120" +
    "\347\001\002\000\004\047\346\001\002\000\004\046\uff79" +
    "\001\002\000\004\046\uff76\001\002\000\004\004\uff74\001" +
    "\002\000\004\004\351\001\002\000\004\124\356\001\002" +
    "\000\006\046\uff71\123\353\001\002\000\004\047\355\001" +
    "\002\000\004\046\uff77\001\002\000\004\046\uff72\001\002" +
    "\000\004\054\357\001\002\000\006\047\362\052\360\001" +
    "\002\000\004\007\uff6f\001\002\000\004\007\363\001\002" +
    "\000\004\007\uff6e\001\002\000\004\125\364\001\002\000" +
    "\004\054\365\001\002\000\004\052\366\001\002\000\006" +
    "\007\370\011\uff6c\001\002\000\004\011\374\001\002\000" +
    "\004\126\371\001\002\000\004\054\372\001\002\000\004" +
    "\051\373\001\002\000\004\011\uff6d\001\002\000\010\007" +
    "\376\046\uff6a\123\uff6a\001\002\000\006\046\uff70\123\uff70" +
    "\001\002\000\004\004\351\001\002\000\006\046\uff6b\123" +
    "\uff6b\001\002\000\006\047\036\142\230\001\002\000\004" +
    "\046\uffec\001\002\000\004\047\u011b\001\002\000\004\100" +
    "\u0105\001\002\000\004\046\uffe8\001\002\000\026\015\017" +
    "\020\026\023\021\046\uffd7\101\u0110\104\006\127\014\135" +
    "\012\141\013\143\u0107\001\002\000\026\015\017\020\026" +
    "\023\021\046\uffd7\101\u0110\104\006\127\014\135\012\141" +
    "\013\144\uffd7\001\002\000\024\015\017\020\026\023\021" +
    "\101\u0110\104\006\127\014\135\012\141\013\144\uffd7\001" +
    "\002\000\026\015\017\020\026\023\021\046\uffd7\101\u0110" +
    "\104\006\127\014\135\012\141\013\144\uffd7\001\002\000" +
    "\026\015\017\020\026\023\021\046\uffd7\101\u0110\104\006" +
    "\127\014\135\012\141\013\144\uffd7\001\002\000\026\015" +
    "\017\020\026\023\021\046\uffd7\101\u0110\104\006\127\014" +
    "\135\012\141\013\144\uffd7\001\002\000\004\046\uffe0\001" +
    "\002\000\026\015\017\020\026\023\021\046\uffd7\101\u0110" +
    "\104\006\127\014\135\012\141\013\144\uffd7\001\002\000" +
    "\026\015\017\020\026\023\021\046\uffd7\101\u0110\104\006" +
    "\127\014\135\012\141\013\144\uffd7\001\002\000\026\015" +
    "\017\020\026\023\021\046\uffd7\101\u0110\104\006\127\014" +
    "\135\012\141\013\144\uffd7\001\002\000\026\015\017\020" +
    "\026\023\021\046\uffd7\101\u0110\104\006\127\014\135\012" +
    "\141\013\144\uffd7\001\002\000\016\062\235\063\240\102" +
    "\237\103\236\105\232\106\231\001\002\000\006\046\uffdb" +
    "\144\uffdb\001\002\000\006\046\uffdd\144\uffdd\001\002\000" +
    "\006\046\uffde\144\uffde\001\002\000\006\046\uffda\144\uffda" +
    "\001\002\000\006\046\uffd8\144\uffd8\001\002\000\006\046" +
    "\uffdc\144\uffdc\001\002\000\006\046\uffdf\144\uffdf\001\002" +
    "\000\004\144\u0119\001\002\000\004\046\uffe1\001\002\000" +
    "\006\046\uffd9\144\uffd9\001\002\000\012\112\262\113\263" +
    "\114\257\115\260\001\002\000\010\007\uffe2\100\uffe2\137" +
    "\u011d\001\002\000\006\007\uffe3\100\uffe3\001\002\000\006" +
    "\007\u0120\100\uffe4\001\002\000\004\100\uffe7\001\002\000" +
    "\004\012\u0121\001\002\000\004\047\u0122\001\002\000\012" +
    "\112\262\113\263\114\257\115\260\001\002\000\010\007" +
    "\uffe2\100\uffe2\137\u011d\001\002\000\006\007\u0120\100\uffe4" +
    "\001\002\000\004\100\uffe5\001\002\000\004\046\uffea\001" +
    "\002\000\030\002\uff7c\015\uff7c\020\uff7c\023\uff7c\046\uff7c" +
    "\101\uff7c\104\uff7c\127\uff7c\135\uff7c\141\uff7c\144\uff7c\001" +
    "\002\000\004\046\uff78\001\002\000\004\047\u012a\001\002" +
    "\000\004\064\u012b\001\002\000\004\047\036\001\002\000" +
    "\004\004\u012e\001\002\000\004\046\uff65\001\002\000\004" +
    "\047\u012f\001\002\000\012\007\uff60\110\333\111\334\116" +
    "\uff60\001\002\000\004\046\uff64\001\002\000\006\007\u0132" +
    "\116\u0135\001\002\000\004\047\u012f\001\002\000\004\046" +
    "\uff5e\001\002\000\004\046\uff63\001\002\000\004\004\u0136" +
    "\001\002\000\004\047\u0137\001\002\000\006\007\u0138\011" +
    "\uff5b\001\002\000\004\047\u013b\001\002\000\004\011\u013a" +
    "\001\002\000\004\046\uff5d\001\002\000\006\007\u0138\011" +
    "\uff5b\001\002\000\004\011\uff5c\001\002\000\004\046\uff5f" +
    "\001\002\000\024\002\uffee\015\017\020\026\023\021\101" +
    "\025\104\006\127\014\135\012\141\013\001\002\000\024" +
    "\002\uffee\015\017\020\026\023\021\101\025\104\006\127" +
    "\014\135\012\141\013\001\002\000\024\002\uffee\015\017" +
    "\020\026\023\021\101\025\104\006\127\014\135\012\141" +
    "\013\001\002\000\024\002\uffee\015\017\020\026\023\021" +
    "\101\025\104\006\127\014\135\012\141\013\001\002\000" +
    "\024\002\uffee\015\017\020\026\023\021\101\025\104\006" +
    "\127\014\135\012\141\013\001\002\000\004\002\ufffb\001" +
    "\002\000\024\002\uffee\015\017\020\026\023\021\101\025" +
    "\104\006\127\014\135\012\141\013\001\002\000\024\002" +
    "\uffee\015\017\020\026\023\021\101\025\104\006\127\014" +
    "\135\012\141\013\001\002\000\024\002\uffee\015\017\020" +
    "\026\023\021\101\025\104\006\127\014\135\012\141\013" +
    "\001\002\000\024\002\uffee\015\017\020\026\023\021\101" +
    "\025\104\006\127\014\135\012\141\013\001\002\000\004" +
    "\002\ufff2\001\002\000\004\002\ufff4\001\002\000\004\002" +
    "\ufff5\001\002\000\004\002\ufff1\001\002\000\004\002\ufff3" +
    "\001\002\000\004\002\uffef\001\002\000\004\002\ufff6\001" +
    "\002\000\004\002\ufff7\001\002\000\004\002\ufff0\001\002" +
    "\000\004\002\ufffd\001\002\000\006\042\u0188\047\u0186\001" +
    "\002\000\006\042\u017d\047\u017b\001\002\000\004\047\u0177" +
    "\001\002\000\006\042\u0168\047\u0167\001\002\000\006\042" +
    "\u015a\047\u0159\001\002\000\004\046\uff00\001\002\000\004" +
    "\046\072\001\002\000\010\007\u015e\046\ufefb\056\u015f\001" +
    "\002\000\004\043\u015c\001\002\000\004\046\ufefe\001\002" +
    "\000\004\047\u0159\001\002\000\004\046\uff01\001\002\000" +
    "\004\047\u0159\001\002\000\004\047\u0161\001\002\000\004" +
    "\046\ufefd\001\002\000\006\007\u015e\046\ufefb\001\002\000" +
    "\004\046\ufeff\001\002\000\004\046\ufefc\001\002\000\030" +
    "\002\uff1b\015\uff1b\020\uff1b\023\uff1b\046\uff1b\101\uff1b\104" +
    "\uff1b\127\uff1b\135\uff1b\141\uff1b\144\uff1b\001\002\000\004" +
    "\046\uff0c\001\002\000\004\046\072\001\002\000\010\046" +
    "\uff0b\056\u016d\064\u016c\001\002\000\004\043\u016a\001\002" +
    "\000\004\046\uff0e\001\002\000\004\047\u0167\001\002\000" +
    "\004\046\uff0f\001\002\000\004\047\u0172\001\002\000\004" +
    "\047\u016e\001\002\000\010\007\uff0a\046\uff0a\056\u016f\001" +
    "\002\000\004\047\u0170\001\002\000\006\007\uff09\046\uff09" +
    "\001\002\000\006\007\u0173\046\uff07\001\002\000\010\007" +
    "\uff0b\046\uff0b\056\u016d\001\002\000\004\047\u0167\001\002" +
    "\000\004\046\uff0d\001\002\000\004\046\uff08\001\002\000" +
    "\030\002\uff1d\015\uff1d\020\uff1d\023\uff1d\046\uff1d\101\uff1d" +
    "\104\uff1d\127\uff1d\135\uff1d\141\uff1d\144\uff1d\001\002\000" +
    "\004\046\uff19\001\002\000\004\046\072\001\002\000\030" +
    "\002\uff1e\015\uff1e\020\uff1e\023\uff1e\046\uff1e\101\uff1e\104" +
    "\uff1e\127\uff1e\135\uff1e\141\uff1e\144\uff1e\001\002\000\004" +
    "\046\uff05\001\002\000\006\007\u0182\046\uff02\001\002\000" +
    "\004\046\072\001\002\000\004\043\u017e\001\002\000\004" +
    "\047\u017b\001\002\000\004\046\uff06\001\002\000\030\002" +
    "\uff1a\015\uff1a\020\uff1a\023\uff1a\046\uff1a\101\uff1a\104\uff1a" +
    "\127\uff1a\135\uff1a\141\uff1a\144\uff1a\001\002\000\004\046" +
    "\uff04\001\002\000\004\047\u0183\001\002\000\006\007\u0182" +
    "\046\uff02\001\002\000\004\046\uff03\001\002\000\004\046" +
    "\uff17\001\002\000\010\007\u018d\046\uff10\056\u018e\001\002" +
    "\000\004\046\072\001\002\000\004\043\u0189\001\002\000" +
    "\004\047\u0186\001\002\000\004\046\uff18\001\002\000\030" +
    "\002\uff1c\015\uff1c\020\uff1c\023\uff1c\046\uff1c\101\uff1c\104" +
    "\uff1c\127\uff1c\135\uff1c\141\uff1c\144\uff1c\001\002\000\004" +
    "\046\uff16\001\002\000\004\047\u0194\001\002\000\004\047" +
    "\u018f\001\002\000\010\007\u018d\046\uff10\056\u0191\001\002" +
    "\000\004\046\uff15\001\002\000\004\047\u0192\001\002\000" +
    "\006\007\u018d\046\uff10\001\002\000\004\046\uff14\001\002" +
    "\000\010\007\u018d\046\uff10\056\u0196\001\002\000\004\046" +
    "\uff13\001\002\000\004\047\u0197\001\002\000\010\007\u018d" +
    "\046\uff10\056\u0199\001\002\000\004\046\uff12\001\002\000" +
    "\004\047\u019a\001\002\000\006\007\u018d\046\uff10\001\002" +
    "\000\004\046\uff11\001\002\000\004\002\ufffe\001\002\000" +
    "\004\004\uff2b\001\002\000\004\004\uff2d\001\002\000\010" +
    "\007\u01d0\016\uff24\100\u01cf\001\002\000\004\004\uff2a\001" +
    "\002\000\010\007\u01d0\016\uff24\100\u01cf\001\002\000\004" +
    "\004\uff2e\001\002\000\004\004\uff29\001\002\000\004\004" +
    "\u01cc\001\002\000\004\016\u01a7\001\002\000\004\004\uff2c" +
    "\001\002\000\004\047\036\001\002\000\014\022\uff21\046" +
    "\uff21\066\u01c8\076\uff21\130\uff21\001\002\000\012\022\u01ab" +
    "\046\uff39\076\uff39\130\uff39\001\002\000\010\046\uff3a\076" +
    "\uff3a\130\u01b5\001\002\000\040\004\134\005\136\006\133" +
    "\012\124\044\126\047\135\050\121\051\131\052\137\070" +
    "\u01a2\071\u019e\072\u01a6\073\u019d\074\u01a3\075\u01a0\001\002" +
    "\000\010\046\uff37\076\uff37\130\uff37\001\002\000\004\004" +
    "\u01ae\001\002\000\026\004\134\005\136\006\133\012\124" +
    "\044\126\047\135\050\121\051\131\052\137\065\u01b1\001" +
    "\002\000\004\011\u01b2\001\002\000\004\011\uff2f\001\002" +
    "\000\004\011\uff30\001\002\000\004\054\u01b3\001\002\000" +
    "\010\050\121\051\131\052\137\001\002\000\010\046\uff38" +
    "\076\uff38\130\uff38\001\002\000\004\077\u01c1\001\002\000" +
    "\006\046\uff34\076\u01b8\001\002\000\004\046\072\001\002" +
    "\000\004\077\u01b9\001\002\000\020\047\036\070\u01a2\071" +
    "\u019e\072\u01a6\073\u019d\074\u01a3\075\u01a0\001\002\000\010" +
    "\046\uff60\110\333\111\334\001\002\000\004\004\u01bc\001" +
    "\002\000\026\004\134\005\136\006\133\012\124\044\126" +
    "\047\135\050\121\051\131\052\137\065\u01b1\001\002\000" +
    "\004\011\u01be\001\002\000\004\046\uff35\001\002\000\004" +
    "\046\uff36\001\002\000\030\002\uff3d\015\uff3d\020\uff3d\023" +
    "\uff3d\046\uff3d\101\uff3d\104\uff3d\127\uff3d\135\uff3d\141\uff3d" +
    "\144\uff3d\001\002\000\020\047\036\070\u01a2\071\u019e\072" +
    "\u01a6\073\u019d\074\u01a3\075\u01a0\001\002\000\006\046\uff3c" +
    "\076\uff3c\001\002\000\004\004\u01c4\001\002\000\026\004" +
    "\134\005\136\006\133\012\124\044\126\047\135\050\121" +
    "\051\131\052\137\065\u01b1\001\002\000\004\011\u01c6\001" +
    "\002\000\006\046\uff3b\076\uff3b\001\002\000\012\022\uff23" +
    "\046\uff23\076\uff23\130\uff23\001\002\000\004\067\u01c9\001" +
    "\002\000\004\047\036\001\002\000\014\022\uff21\046\uff21" +
    "\066\u01c8\076\uff21\130\uff21\001\002\000\012\022\uff22\046" +
    "\uff22\076\uff22\130\uff22\001\002\000\026\004\134\005\136" +
    "\006\133\012\124\044\126\047\135\050\121\051\131\052" +
    "\137\065\u01b1\001\002\000\004\011\u01ce\001\002\000\010" +
    "\007\u01d0\016\uff24\100\u01cf\001\002\000\004\047\u01db\001" +
    "\002\000\042\004\134\005\136\006\133\012\124\044\126" +
    "\047\135\050\121\051\131\052\137\065\u01d2\070\u01a2\071" +
    "\u019e\072\u01a6\073\u019d\074\u01a3\075\u01a0\001\002\000\004" +
    "\016\uff31\001\002\000\010\007\u01d0\016\uff24\100\u01cf\001" +
    "\002\000\010\007\u01d0\016\uff24\100\u01cf\001\002\000\004" +
    "\004\u01d5\001\002\000\026\004\134\005\136\006\133\012" +
    "\124\044\126\047\135\050\121\051\131\052\137\065\u01b1" +
    "\001\002\000\004\011\u01d7\001\002\000\010\007\u01d0\016" +
    "\uff24\100\u01cf\001\002\000\004\016\uff26\001\002\000\004" +
    "\016\uff27\001\002\000\004\016\uff28\001\002\000\010\007" +
    "\u01d0\016\uff24\100\u01cf\001\002\000\004\016\uff25\001\002" +
    "\000\004\016\uff32\001\002\000\004\016\uff33\001\002\000" +
    "\004\002\001\001\002\000\004\002\ufffa\001\002\000\004" +
    "\047\036\001\002\000\006\047\u01f9\133\u01f8\001\002\000" +
    "\004\046\072\001\002\000\004\047\036\001\002\000\004" +
    "\047\u01e7\001\002\000\004\046\uffa3\001\002\000\004\046" +
    "\uffa1\001\002\000\006\004\u01ea\100\u01eb\001\002\000\004" +
    "\046\uffa5\001\002\000\004\047\u01ed\001\002\000\004\015" +
    "\017\001\002\000\004\046\uff81\001\002\000\006\007\u01ef" +
    "\011\uff7f\001\002\000\004\011\u01f2\001\002\000\004\047" +
    "\u01f0\001\002\000\006\007\u01ef\011\uff7f\001\002\000\004" +
    "\011\uff80\001\002\000\006\046\uff7d\100\u01f4\001\002\000" +
    "\004\046\uff82\001\002\000\004\015\017\001\002\000\004" +
    "\046\uff7e\001\002\000\030\002\uffa6\015\uffa6\020\uffa6\023" +
    "\uffa6\046\uffa6\101\uffa6\104\uffa6\127\uffa6\135\uffa6\141\uffa6" +
    "\144\uffa6\001\002\000\006\123\u01fb\134\u01fc\001\002\000" +
    "\006\123\uff9d\134\uff9d\001\002\000\006\123\uff9e\134\uff9e" +
    "\001\002\000\004\046\uffa2\001\002\000\004\047\u0200\001" +
    "\002\000\004\124\u01fd\001\002\000\004\054\u01fe\001\002" +
    "\000\004\047\u01ff\001\002\000\004\046\uffa0\001\002\000" +
    "\004\046\uff9f\001\002\000\010\023\u0206\127\u0205\132\u0202" +
    "\001\002\000\014\004\247\007\253\046\uff45\047\255\117" +
    "\252\001\002\000\004\046\uffa4\001\002\000\004\046\uff9b" +
    "\001\002\000\004\131\u0228\001\002\000\012\042\u020b\047" +
    "\u020a\117\u0208\131\u0207\001\002\000\006\042\u021b\047\uff91" +
    "\001\002\000\006\042\u0222\047\u0221\001\002\000\006\007" +
    "\u020f\046\uff8a\001\002\000\006\007\uff94\046\uff94\001\002" +
    "\000\004\043\u020c\001\002\000\004\047\u020d\001\002\000" +
    "\006\007\uff96\046\uff96\001\002\000\004\046\uff98\001\002" +
    "\000\012\042\u0213\047\u0212\117\u0211\131\u0210\001\002\000" +
    "\006\042\u021b\047\uff91\001\002\000\006\042\u0217\047\u0216" +
    "\001\002\000\004\046\uff8c\001\002\000\004\043\u0214\001" +
    "\002\000\004\047\u0215\001\002\000\004\046\uff8e\001\002" +
    "\000\004\046\uff8d\001\002\000\004\043\u0218\001\002\000" +
    "\004\047\u0219\001\002\000\004\046\uff8f\001\002\000\004" +
    "\047\u021d\001\002\000\004\043\u021c\001\002\000\004\047" +
    "\uff92\001\002\000\004\007\u021f\001\002\000\004\046\uff8b" +
    "\001\002\000\004\047\u0220\001\002\000\006\007\uff90\046" +
    "\uff90\001\002\000\006\007\uff95\046\uff95\001\002\000\004" +
    "\043\u0223\001\002\000\004\047\u0224\001\002\000\006\007" +
    "\uff97\046\uff97\001\002\000\004\047\u0226\001\002\000\004" +
    "\007\u021f\001\002\000\006\007\uff93\046\uff93\001\002\000" +
    "\004\047\036\001\002\000\016\023\uff83\031\u0230\033\u022c" +
    "\047\036\123\u022e\132\uff83\001\002\000\006\023\uff88\132" +
    "\uff88\001\002\000\006\023\u0206\132\u0202\001\002\000\004" +
    "\031\u0234\001\002\000\014\023\uff83\031\u0230\033\u022c\123" +
    "\u022e\132\uff83\001\002\000\004\047\u0231\001\002\000\006" +
    "\023\uff86\132\uff86\001\002\000\006\023\uff85\132\uff85\001" +
    "\002\000\012\023\uff83\031\u0230\033\u022c\132\uff83\001\002" +
    "\000\006\023\uff87\132\uff87\001\002\000\006\023\uff89\132" +
    "\uff89\001\002\000\006\023\uff84\132\uff84\001\002\000\004" +
    "\046\uff9c\001\002\000\004\046\uff9a\001\002\000\004\046" +
    "\uff99\001\002\000\004\047\u0266\001\002\000\004\140\u0246" +
    "\001\002\000\004\004\u023e\001\002\000\004\046\uffd4\001" +
    "\002\000\004\046\072\001\002\000\030\002\uffd6\015\uffd6" +
    "\020\uffd6\023\uffd6\046\uffd6\101\uffd6\104\uffd6\127\uffd6\135" +
    "\uffd6\141\uffd6\144\uffd6\001\002\000\004\051\u023f\001\002" +
    "\000\004\011\u0240\001\002\000\010\012\u0238\047\036\136" +
    "\u0241\001\002\000\006\012\u0238\047\036\001\002\000\004" +
    "\046\uffd2\001\002\000\004\046\uffd5\001\002\000\004\046" +
    "\uffd3\001\002\000\004\046\uffd1\001\002\000\024\004\134" +
    "\005\136\006\133\012\124\044\126\047\135\050\121\051" +
    "\131\052\137\001\002\000\014\007\u0249\016\uffc5\022\uffc5" +
    "\046\uffc5\137\uffc5\001\002\000\012\016\uffc7\022\uffc7\046" +
    "\uffc7\137\u024d\001\002\000\024\004\134\005\136\006\133" +
    "\012\124\044\126\047\135\050\121\051\131\052\137\001" +
    "\002\000\014\007\u0249\016\uffc5\022\uffc5\046\uffc5\137\uffc5" +
    "\001\002\000\012\016\uffc6\022\uffc6\046\uffc6\137\uffc6\001" +
    "\002\000\010\016\u025c\022\uffcb\046\uffcb\001\002\000\020" +
    "\047\u024f\070\u01a2\071\u019e\072\u01a6\073\u019d\074\u01a3\075" +
    "\u01a0\001\002\000\004\004\u0258\001\002\000\014\007\u0252" +
    "\016\uffaf\022\uffaf\046\uffaf\100\u0251\001\002\000\010\016" +
    "\uffc8\022\uffc8\046\uffc8\001\002\000\004\047\u0256\001\002" +
    "\000\020\047\u024f\070\u01a2\071\u019e\072\u01a6\073\u019d\074" +
    "\u01a3\075\u01a0\001\002\000\010\016\uffb1\022\uffb1\046\uffb1" +
    "\001\002\000\010\016\uffb4\022\uffb4\046\uffb4\001\002\000" +
    "\010\016\uffb0\022\uffb0\046\uffb0\001\002\000\012\007\u0252" +
    "\016\uffaf\022\uffaf\046\uffaf\001\002\000\010\016\uffb2\022" +
    "\uffb2\046\uffb2\001\002\000\026\004\134\005\136\006\133" +
    "\012\124\044\126\047\135\050\121\051\131\052\137\065" +
    "\u01b1\001\002\000\004\011\u025a\001\002\000\014\007\u0252" +
    "\016\uffaf\022\uffaf\046\uffaf\100\u0251\001\002\000\010\016" +
    "\uffb3\022\uffb3\046\uffb3\001\002\000\004\047\036\001\002" +
    "\000\006\022\u025e\046\uffcd\001\002\000\024\004\134\005" +
    "\136\006\133\012\124\044\126\047\135\050\121\051\131" +
    "\052\137\001\002\000\004\046\uffcf\001\002\000\004\046" +
    "\uffce\001\002\000\010\007\u0262\022\uffc9\046\uffc9\001\002" +
    "\000\004\047\036\001\002\000\006\022\uffcc\046\uffcc\001" +
    "\002\000\010\007\u0262\022\uffc9\046\uffc9\001\002\000\006" +
    "\022\uffca\046\uffca\001\002\000\004\140\u0246\001\002\000" +
    "\004\046\uffd0\001\002\000\004\047\u0289\001\002\000\004" +
    "\046\uffbe\001\002\000\012\022\u027b\046\uffb7\066\u027a\137" +
    "\u0278\001\002\000\004\046\uffc2\001\002\000\004\004\u0271" +
    "\001\002\000\004\046\072\001\002\000\006\012\u0268\047" +
    "\036\001\002\000\004\046\uffbf\001\002\000\030\002\uffc4" +
    "\015\uffc4\020\uffc4\023\uffc4\046\uffc4\101\uffc4\104\uffc4\127" +
    "\uffc4\135\uffc4\141\uffc4\144\uffc4\001\002\000\004\051\u0272" +
    "\001\002\000\004\011\u0273\001\002\000\012\012\u0268\016" +
    "\u026e\047\036\136\u0275\001\002\000\004\046\uffc0\001\002" +
    "\000\010\012\u0268\016\u026e\047\036\001\002\000\004\046" +
    "\uffc3\001\002\000\004\046\uffc1\001\002\000\020\047\u024f" +
    "\070\u01a2\071\u019e\072\u01a6\073\u019d\074\u01a3\075\u01a0\001" +
    "\002\000\004\046\uffbd\001\002\000\004\067\u0285\001\002" +
    "\000\040\004\134\005\136\006\133\012\124\044\126\047" +
    "\135\050\121\051\131\052\137\070\u01a2\071\u019e\072\u01a6" +
    "\073\u019d\074\u01a3\075\u01a0\001\002\000\004\046\uffba\001" +
    "\002\000\004\046\uffb8\001\002\000\004\046\uffb6\001\002" +
    "\000\004\004\u0280\001\002\000\026\004\134\005\136\006" +
    "\133\012\124\044\126\047\135\050\121\051\131\052\137" +
    "\065\u01b1\001\002\000\004\011\u0282\001\002\000\004\054" +
    "\u0283\001\002\000\010\050\121\051\131\052\137\001\002" +
    "\000\004\046\uffb5\001\002\000\006\012\u0268\047\036\001" +
    "\002\000\004\046\uffb9\001\002\000\006\022\u027b\046\uffb7" +
    "\001\002\000\004\046\uffbb\001\002\000\012\022\u027b\046" +
    "\uffb7\066\u027a\137\u0278\001\002\000\004\046\uffbc\001\002" +
    "\000\004\002\ufff8\001\002\000\004\002\ufffc\001\002\000" +
    "\004\002\uffff\001\002\000\004\047\036\001\002\000\004" +
    "\046\072\001\002\000\030\002\uff20\015\uff20\020\uff20\023" +
    "\uff20\046\uff20\101\uff20\104\uff20\127\uff20\135\uff20\141\uff20" +
    "\144\uff20\001\002\000\004\002\ufff9\001\002\000\004\002" +
    "\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0290\000\030\002\015\004\006\005\017\006\022\007" +
    "\014\010\023\011\004\012\007\013\010\014\021\204\003" +
    "\001\001\000\030\003\u0291\004\u013f\005\u0144\006\u0145\007" +
    "\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e" +
    "\001\001\000\030\003\u0290\004\u013f\005\u0144\006\u0145\007" +
    "\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e" +
    "\001\001\000\002\001\001\000\030\003\u028c\004\u013f\005" +
    "\u0144\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140" +
    "\014\021\204\u013e\001\001\000\030\003\u028b\004\u013f\005" +
    "\u0144\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140" +
    "\014\021\204\u013e\001\001\000\030\003\u028a\004\u013f\005" +
    "\u0144\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140" +
    "\014\021\204\u013e\001\001\000\012\017\u0269\153\u026c\155" +
    "\u026a\156\u0268\001\001\000\010\017\u0238\172\u023b\174\u023a" +
    "\001\001\000\004\127\u01e2\001\001\000\030\003\u01df\004" +
    "\u013f\005\u0144\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141" +
    "\013\u0140\014\021\204\u013e\001\001\000\002\001\001\000" +
    "\020\017\121\032\u01a0\033\127\035\122\060\126\061\u01a4" +
    "\071\u01a3\001\001\000\030\003\u019b\004\u013f\005\u0144\006" +
    "\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014\021" +
    "\204\u013e\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\003\u0150\004\u013f\005\u0144\006\u0145\007\u0143\010\u0146" +
    "\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001\001\000" +
    "\030\003\u0142\004\u013f\005\u0144\006\u0145\007\u0143\010\u0146" +
    "\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001\001\000" +
    "\020\017\232\072\226\073\225\074\224\205\242\206\241" +
    "\207\240\001\001\000\014\015\030\016\027\017\032\020" +
    "\031\021\033\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\215\216\001\001\000\006\023\215\026\101\001" +
    "\001\000\006\023\105\026\101\001\001\000\002\001\001" +
    "\000\012\016\100\017\032\020\031\021\033\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\022\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\062\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\015\067\016\027\017\032\020\031\021\033\001\001" +
    "\000\004\215\070\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\117\001\001" +
    "\000\004\024\106\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\113\001\001\000" +
    "\002\001\001\000\004\026\115\001\001\000\002\001\001" +
    "\000\014\017\121\032\131\033\127\035\122\060\126\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\030\211\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\175\001\001\000\014\017" +
    "\121\032\174\033\127\035\122\060\126\001\001\000\014" +
    "\017\121\032\172\033\127\035\122\060\126\001\001\000" +
    "\002\001\001\000\014\017\121\032\167\033\127\035\122" +
    "\060\126\001\001\000\002\001\001\000\004\030\141\001" +
    "\001\000\014\017\121\032\162\033\127\035\122\060\126" +
    "\001\001\000\002\001\001\000\004\031\144\001\001\000" +
    "\014\017\121\032\146\033\127\035\122\060\126\001\001" +
    "\000\002\001\001\000\004\030\156\001\001\000\004\030" +
    "\153\001\001\000\004\030\150\001\001\000\002\001\001" +
    "\000\004\031\152\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\155\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\160\001\001\000\002\001\001\000" +
    "\004\030\166\001\001\000\004\030\165\001\001\000\004" +
    "\030\164\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\031\177\001\001\000\002" +
    "\001\001\000\014\017\121\032\201\033\127\035\122\060" +
    "\126\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\036\205\001\001\000\002\001\001\000\014\017\121\032" +
    "\207\033\127\035\122\060\126\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\213\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\075\u0127\001\001\000" +
    "\004\215\u0126\001\001\000\006\017\232\207\u0125\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\210\u0102\001" +
    "\001\000\002\001\001\000\004\017\341\001\001\000\004" +
    "\074\340\001\001\000\004\017\337\001\001\000\006\017" +
    "\244\104\245\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\215\243\001\001\000\002\001\001\000\004\105" +
    "\247\001\001\000\002\001\001\000\010\106\253\112\250" +
    "\117\255\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\112\324\001\001\000\002\001\001" +
    "\000\004\107\260\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\111\270\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\110\306\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\113\274\001\001\000\004\116\302\001\001" +
    "\000\002\001\001\000\004\074\277\001\001\000\002\001" +
    "\001\000\004\074\301\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\106\310\112\250\117\255" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\116\316" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\115" +
    "\321\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\113\326\001\001\000" +
    "\004\114\327\001\001\000\004\117\336\001\001\000\002" +
    "\001\001\000\004\100\334\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\120" +
    "\344\001\001\000\004\125\347\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\122\351\001\001\000\002\001\001\000\004\121\353" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\126\360\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\123\366" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\124\374" +
    "\001\001\000\002\001\001\000\004\122\376\001\001\000" +
    "\002\001\001\000\010\017\232\206\u0100\207\240\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\213\u0103\001" +
    "\001\000\002\001\001\000\026\004\u0107\005\u010c\006\u010d" +
    "\007\u010b\010\u010e\011\u0105\012\u0108\013\u0109\014\021\214" +
    "\u010a\001\001\000\026\004\u0107\005\u010c\006\u010d\007\u010b" +
    "\010\u010e\011\u0105\012\u0108\013\u0109\014\021\214\u0119\001" +
    "\001\000\026\004\u0107\005\u010c\006\u010d\007\u010b\010\u010e" +
    "\011\u0105\012\u0108\013\u0109\014\021\214\u0117\001\001\000" +
    "\026\004\u0107\005\u010c\006\u010d\007\u010b\010\u010e\011\u0105" +
    "\012\u0108\013\u0109\014\021\214\u0116\001\001\000\026\004" +
    "\u0107\005\u010c\006\u010d\007\u010b\010\u010e\011\u0105\012\u0108" +
    "\013\u0109\014\021\214\u0115\001\001\000\026\004\u0107\005" +
    "\u010c\006\u010d\007\u010b\010\u010e\011\u0105\012\u0108\013\u0109" +
    "\014\021\214\u0114\001\001\000\002\001\001\000\026\004" +
    "\u0107\005\u010c\006\u010d\007\u010b\010\u010e\011\u0105\012\u0108" +
    "\013\u0109\014\021\214\u0113\001\001\000\026\004\u0107\005" +
    "\u010c\006\u010d\007\u010b\010\u010e\011\u0105\012\u0108\013\u0109" +
    "\014\021\214\u0112\001\001\000\026\004\u0107\005\u010c\006" +
    "\u010d\007\u010b\010\u010e\011\u0105\012\u0108\013\u0109\014\021" +
    "\214\u0111\001\001\000\026\004\u0107\005\u010c\006\u010d\007" +
    "\u010b\010\u010e\011\u0105\012\u0108\013\u0109\014\021\214\u0110" +
    "\001\001\000\010\072\226\073\225\074\224\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\107\u011b\001\001\000\004\212\u011d\001\001\000" +
    "\002\001\001\000\004\211\u011e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\107\u0122\001" +
    "\001\000\004\212\u0123\001\001\000\004\211\u0124\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\017\u012b\001\001\000\004\076\u012c\001\001\000\002\001" +
    "\001\000\004\077\u012f\001\001\000\004\100\u0130\001\001" +
    "\000\002\001\001\000\006\101\u0133\102\u0132\001\001\000" +
    "\004\077\u013c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\103\u0138\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\103\u013b\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\003\u014f\004\u013f\005\u0144\006\u0145\007\u0143" +
    "\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001" +
    "\001\000\030\003\u014e\004\u013f\005\u0144\006\u0145\007\u0143" +
    "\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001" +
    "\001\000\030\003\u014d\004\u013f\005\u0144\006\u0145\007\u0143" +
    "\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001" +
    "\001\000\030\003\u014c\004\u013f\005\u0144\006\u0145\007\u0143" +
    "\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001" +
    "\001\000\030\003\u014b\004\u013f\005\u0144\006\u0145\007\u0143" +
    "\010\u0146\011\u013d\012\u0141\013\u0140\014\021\204\u013e\001" +
    "\001\000\002\001\001\000\030\003\u014a\004\u013f\005\u0144" +
    "\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014" +
    "\021\204\u013e\001\001\000\030\003\u0149\004\u013f\005\u0144" +
    "\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014" +
    "\021\204\u013e\001\001\000\030\003\u0148\004\u013f\005\u0144" +
    "\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014" +
    "\021\204\u013e\001\001\000\030\003\u0147\004\u013f\005\u0144" +
    "\006\u0145\007\u0143\010\u0146\011\u013d\012\u0141\013\u0140\014" +
    "\021\204\u013e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\040\u0186\045\u0184\001" +
    "\001\000\006\041\u017b\051\u0179\001\001\000\004\037\u0177" +
    "\001\001\000\010\043\u0165\044\u0168\055\u0164\001\001\000" +
    "\010\042\u0157\050\u0156\052\u015a\001\001\000\002\001\001" +
    "\000\004\215\u0163\001\001\000\004\053\u015f\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\050\u015c\052\u015a" +
    "\001\001\000\002\001\001\000\006\050\u0162\052\u015a\001" +
    "\001\000\004\052\u0161\001\001\000\002\001\001\000\004" +
    "\053\u015f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\215\u0175\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\044\u016a\055\u0164\001\001\000\002\001\001\000\004" +
    "\055\u0170\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\056\u0173\001\001" +
    "\000\002\001\001\000\006\044\u0174\055\u0164\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\215\u0178\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\047\u0180\001\001\000\004\215\u017f" +
    "\001\001\000\002\001\001\000\004\051\u017e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\047\u0183\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u018b\001\001\000\004\215\u018a" +
    "\001\001\000\002\001\001\000\004\045\u0189\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u018f\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u0192\001\001" +
    "\000\002\001\001\000\004\046\u0194\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u0197\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u019a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\062\u01dd\001\001\000\002\001\001\000" +
    "\004\062\u01dc\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\017\u01a7\063\u01a8\001\001\000\004\064\u01c6\001\001" +
    "\000\004\066\u01a9\001\001\000\004\070\u01b5\001\001\000" +
    "\016\017\121\032\u01ab\033\127\035\122\060\126\071\u01ac" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\017" +
    "\121\032\u01af\033\127\035\122\060\126\065\u01ae\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\033\u01b3\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\067\u01b6\001\001\000\004\215" +
    "\u01bf\001\001\000\002\001\001\000\006\017\u01b9\071\u01ba" +
    "\001\001\000\004\100\u01be\001\001\000\002\001\001\000" +
    "\016\017\121\032\u01af\033\127\035\122\060\126\065\u01bc" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\017\u01c1\071\u01c2\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\017\121\032" +
    "\u01af\033\127\035\122\060\126\065\u01c4\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\u01c9\001\001\000\004\064\u01ca\001\001" +
    "\000\002\001\001\000\016\017\121\032\u01af\033\127\035" +
    "\122\060\126\065\u01cc\001\001\000\002\001\001\000\004" +
    "\062\u01d0\001\001\000\002\001\001\000\016\017\121\032" +
    "\u01d2\033\127\035\122\060\126\071\u01d3\001\001\000\002" +
    "\001\001\000\004\062\u01d9\001\001\000\004\062\u01d8\001" +
    "\001\000\002\001\001\000\016\017\121\032\u01af\033\127" +
    "\035\122\060\126\065\u01d5\001\001\000\002\001\001\000" +
    "\004\062\u01d7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\062\u01db\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\u0200\001\001\000\004\133" +
    "\u01f6\001\001\000\004\215\u01f5\001\001\000\006\017\u01e7" +
    "\130\u01e8\001\001\000\004\132\u01e5\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\u01eb\001\001\000\002\001" +
    "\001\000\004\134\u01ed\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\134\u01f0\001\001\000\002\001\001\000" +
    "\004\135\u01f2\001\001\000\002\001\001\000\004\007\u01f4" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\151" +
    "\u01f9\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\131\u0202\141\u0203\001\001\000\012\105\u0236\106" +
    "\u0235\112\250\117\255\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\142\u0208\001\001\000" +
    "\004\147\u0224\001\001\000\002\001\001\000\004\145\u020d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\147\u0219\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\144\u021d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\144\u0226\001\001\000\002\001\001\000\004" +
    "\017\u0228\001\001\000\012\017\u022c\136\u022a\137\u0229\140" +
    "\u022e\001\001\000\002\001\001\000\004\141\u0234\001\001" +
    "\000\002\001\001\000\006\137\u0232\140\u022e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\140\u0231\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\175\u0244\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\215\u023c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\017\u0238\173\u0242\174\u0241\001\001\000\006\017\u0238" +
    "\174\u0243\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\017\121\032\u0246" +
    "\033\127\035\122\060\126\001\001\000\004\177\u0247\001" +
    "\001\000\004\200\u024b\001\001\000\014\017\121\032\u0249" +
    "\033\127\035\122\060\126\001\001\000\004\177\u024a\001" +
    "\001\000\002\001\001\000\004\201\u025c\001\001\000\006" +
    "\071\u024d\160\u024f\001\001\000\002\001\001\000\006\162" +
    "\u0253\163\u0252\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\071\u024d\160\u0254\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\163\u0256\001\001" +
    "\000\002\001\001\000\016\017\121\032\u01af\033\127\035" +
    "\122\060\126\065\u0258\001\001\000\002\001\001\000\006" +
    "\162\u025a\163\u0252\001\001\000\002\001\001\000\004\017" +
    "\u0260\001\001\000\004\202\u025e\001\001\000\014\017\121" +
    "\032\u025f\033\127\035\122\060\126\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\203\u0262\001\001\000\004" +
    "\017\u0263\001\001\000\002\001\001\000\004\203\u0264\001" +
    "\001\000\002\001\001\000\004\175\u0266\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\157" +
    "\u0278\161\u027b\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\215\u026f\001\001\000\006\017\u0269\156\u026e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\017\u0269\154\u0275\155\u0273\156" +
    "\u0268\001\001\000\002\001\001\000\010\017\u0269\155\u0276" +
    "\156\u0268\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\071\u024d\160\u0286\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\017\121\032\u027d\033\127\035\122\060" +
    "\126\071\u027e\171\u027c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\017" +
    "\121\032\u01af\033\127\035\122\060\126\065\u0280\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\u0283\001" +
    "\001\000\002\001\001\000\006\017\u0269\156\u0285\001\001" +
    "\000\002\001\001\000\004\161\u0287\001\001\000\002\001" +
    "\001\000\006\157\u0289\161\u027b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\017\u028e\001\001\000\004\215\u028f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Syntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Syntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Syntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Syntax$actions {
  private final Syntax parser;

  /** Constructor */
  CUP$Syntax$actions(Syntax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Syntax$do_action(
    int                        CUP$Syntax$act_num,
    java_cup.runtime.lr_parser CUP$Syntax$parser,
    java.util.Stack            CUP$Syntax$stack,
    int                        CUP$Syntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Syntax$result;

      /* select the action based on the action number */
      switch (CUP$Syntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // FIN ::= FinSentencia 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("FIN",139, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // S ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("S",28, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // S ::= Distinct 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("S",28, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // S ::= All 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("S",28, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // expression2 ::= Sum ParentesisA S expression ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression2",27, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // constant ::= Entero 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constant",25, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // constant ::= Decimal 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constant",25, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // constant ::= String 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("constant",25, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // expressionTemp ::= At Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expressionTemp",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // expressionTemp ::= object 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expressionTemp",46, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // expression ::= expressionTemp Operador Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // expression ::= expressionTemp Operador expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // expression ::= expression2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // expression ::= Negativo expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // expression ::= Positivo expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // expression ::= ParentesisA expression ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // expression ::= At Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // expression ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // expression ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // expression ::= constant 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("expression",24, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // P ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // P ::= ParentesisA expression O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // P ::= ParentesisA Null O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // P ::= ParentesisA Default O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // O ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("O",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // O ::= Comma expression O 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("O",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // O ::= Comma Null O 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("O",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // O ::= Comma Default O 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("O",22, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // N ::= ParentesisA expression O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("N",21, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // N ::= ParentesisA Null O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("N",21, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // N ::= ParentesisA Default O ParentesisC P 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("N",21, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // L ::= DefaultValues 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("L",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // L ::= Values N 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("L",20, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // M ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("M",19, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // M ::= Comma Identificador M 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("M",19, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // columnList ::= Identificador M 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("columnList",18, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // E ::= L 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("E",17, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // E ::= ParentesisA columnList ParentesisC L 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("E",17, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // F ::= String 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("F",16, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // F ::= Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("F",16, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // F ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("F",16, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // F ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("F",16, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // oRowset ::= OpenRowset ParentesisA String Comma String PuntoComma String PuntoComma String Comma F ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("oRowset",15, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-11)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // oRowset ::= OpenRowset ParentesisA String Comma String Comma F ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("oRowset",15, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // rowsetFunc ::= oRowset 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("rowsetFunc",14, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // rowsetFunc ::= OpenQuery ParentesisA Identificador Comma String ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("rowsetFunc",14, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // object ::= Identificador Punto Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("object",13, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // object ::= Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("object",13, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // object ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("object",13, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // object ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("object",13, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // C ::= rowsetFunc E 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("C",12, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // C ::= object E 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("C",12, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // B ::= C 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("B",11, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // B ::= Into C 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("B",11, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // A ::= Insert B FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("A",10, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // A ::= Insert Top ParentesisA Entero ParentesisC B FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("A",10, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // DropN ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropN",41, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // DropN ::= Comma DropL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropN",41, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // DropM ::= Identificador DropN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropM",40, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // DropL ::= DropM 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropL",38, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // DropL ::= Identificador Punto DropM 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropL",38, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // DropE ::= DropL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropE",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // DropE ::= If Exists DropL 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropE",32, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // DropK ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropK",37, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // DropK ::= Comma Identificador DropK 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropK",37, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // DropJ ::= Identificador DropK 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropJ",39, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // DropD ::= DropJ 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropD",31, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // DropD ::= If Exists DropJ 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropD",31, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // DropObject2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropObject2",44, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // DropObject2 ::= Comma DropX 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropObject2",44, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // DropObject ::= Identificador Punto Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropObject",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // DropObject ::= Identificador Punto Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropObject",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // DropObject ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropObject",43, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // DropX ::= DropObject 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropX",34, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // DropX ::= Identificador On DropObject DropObject2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropX",34, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // DropF ::= DropX 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropF",33, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // DropF ::= If Exists DropX 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropF",33, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // DropH ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropH",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // DropH ::= Comma Identificador Punto Identificador Punto Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropH",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // DropH ::= Comma Identificador Punto Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropH",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // DropH ::= Comma Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropH",36, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // DropG ::= Identificador Punto Identificador Punto Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropG",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // DropG ::= Identificador Punto Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropG",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // DropG ::= Identificador DropH 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropG",35, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // DropC ::= DropG 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropC",30, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // DropC ::= If Exists DropG 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropC",30, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // DropB ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("DropB",29, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // opcionDrop ::= Drop Database DropD FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDrop",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // opcionDrop ::= Drop View DropE FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDrop",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // opcionDrop ::= Drop Table DropC FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDrop",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // opcionDrop ::= Drop Index DropF FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDrop",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // opcionDrop ::= Drop Login DropB FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDrop",7, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // opcionInsert ::= A 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionInsert",6, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // opcionTruncate ::= Truncate Table object FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionTruncate",9, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // Sel4 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel4",50, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Sel4 ::= Inner Join object Sel4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel4",50, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Sel3 ::= object Sel4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel3",49, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Sel2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel2",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // Sel2 ::= As Identificador Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel2",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Sel2 ::= Comma AgFunction ParentesisA Sel5 ParentesisC Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel2",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Sel2 ::= Comma expression Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel2",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // Sel2 ::= Comma Star Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel2",48, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // AgFunction ::= Year 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // AgFunction ::= Month 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // AgFunction ::= Day 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // AgFunction ::= Min 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // AgFunction ::= Max 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // AgFunction ::= Count 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("AgFunction",55, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // Sel5 ::= expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel5",51, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // Sel5 ::= Star 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel5",51, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // Sel1 ::= AgFunction ParentesisA Sel5 ParentesisC Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel1",47, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // Sel1 ::= expression Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel1",47, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // Sel1 ::= Star Sel2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel1",47, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // Sel7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel7",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // Sel7 ::= Order By AgFunction ParentesisA Sel5 ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel7",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // Sel7 ::= Order By object Create7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel7",53, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // Sel6 ::= Where expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel6",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // Sel6 ::= Where AgFunction ParentesisA Sel5 ParentesisC Operador constant 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel6",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // Sel6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Sel6",52, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // SelF ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SelF",54, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // SelF ::= Group By AgFunction ParentesisA Sel5 ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SelF",54, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // SelF ::= Group By object 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SelF",54, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // opcionSelect ::= Select Sel1 From Sel3 Sel6 SelF Sel7 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionSelect",5, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // Create20 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create20",75, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // Create20 ::= On Primary 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create20",75, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // Create19 ::= ParentesisA Identificador Create7 ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create19",74, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // Create18 ::= Unique 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create18",73, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // Create18 ::= Primary Key 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create18",73, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // Create18 ::= Unique Create3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create18",73, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Create18 ::= Primary Key Create3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create18",73, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Create22 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create22",77, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Create22 ::= Comma Create17 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create22",77, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Create17 ::= Constraint Identificador Create18 Create19 Create22 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create17",72, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Create21 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create21",76, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Create21 ::= Not Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create21",76, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Create21 ::= Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create21",76, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Create16 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create16",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Create16 ::= Constraint Identificador Create18 Create21 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create16",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Create16 ::= Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create16",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Create16 ::= Not Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create16",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Create16 ::= Identity ParentesisA Entero Comma Entero ParentesisC Create21 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create16",71, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Create15 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create15",70, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Create15 ::= Comma Create13 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create15",70, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Create14 ::= Bit 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create14",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Create14 ::= Varchar ParentesisA Entero ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create14",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Create14 ::= Float 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create14",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Create14 ::= Int 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create14",69, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Create13 ::= Create22 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create13",68, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Create13 ::= Create17 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create13",68, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Create13 ::= Identificador Create14 Create16 Create15 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create13",68, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Create12 ::= ParentesisA Create13 ParentesisC Create20 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create12",67, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Create11 ::= object Create12 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create11",66, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Create10 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create10",65, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Create10 ::= Comma Identificador Create10 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create10",65, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Create9 ::= Include ParentesisA Identificador Create10 ParentesisC 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create9",64, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Create8 ::= Create9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create8",63, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Create8 ::= Comma Create6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create8",63, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Create7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create7",62, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Create7 ::= Desc 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create7",62, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Create7 ::= Asc 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create7",62, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Create6 ::= Identificador Create7 Create8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create6",61, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Create5 ::= ParentesisA Create6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create5",60, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Create4 ::= Index Identificador On object Create5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create4",59, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Create3 ::= NonClustered 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create3",58, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Create3 ::= Clustered 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create3",58, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Create2 ::= Create3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create2",57, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Create2 ::= Unique Create3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create2",57, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Create27 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create27",82, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Create27 ::= Comma Create25 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create27",82, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Create26 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create26",81, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Create26 ::= Comma Size Operador Entero 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create26",81, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Create29 ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create29",84, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Create29 ::= String 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create29",84, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Create25 ::= ParentesisA Name Operador Create29 Comma File Operador String Create26 ParentesisC Create27 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create25",80, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-10)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Create24 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create24",79, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Create24 ::= Collate Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create24",79, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Create28 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create28",83, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Create28 ::= Primary 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create28",83, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Create23 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create23",78, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Create23 ::= Collate Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create23",78, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Create23 ::= On Create28 Create25 Create24 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create23",78, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Create1 ::= Create2 Create4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create1",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Create1 ::= Database object Create23 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create1",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Create1 ::= User object 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create1",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Create1 ::= Table Create11 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Create1",56, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // opcionCreate ::= Create Create1 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionCreate",8, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Alter7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter7",91, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Alter7 ::= As opcionSelect 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter7",91, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Alter6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter6",90, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Alter6 ::= Comma Identificador Alter6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter6",90, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Alter2 ::= object As opcionSelect 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter2",86, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Alter2 ::= object ParentesisA Identificador Alter6 ParentesisC Alter7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter2",86, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Alter10 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter10",94, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Alter10 ::= Not Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter10",94, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Alter10 ::= Null 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter10",94, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Alter9 ::= Alter10 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter9",93, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Alter9 ::= Collate Identificador Alter10 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter9",93, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Alter8 ::= Alter9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter8",92, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Alter8 ::= object Alter9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter8",92, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Alter15 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Alter15 ::= Comma Column Alter17 Identificador Alter14 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Alter15 ::= Comma Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Alter15 ::= Comma Constraint Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Alter15 ::= Comma If Exists Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Alter15 ::= Comma Constraint If Exists Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter15",99, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Alter14 ::= Comma Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter14",98, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Alter17 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter17",101, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Alter17 ::= If Exists 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter17",101, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Alter12 ::= Column Alter17 Identificador Alter14 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter12",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Alter12 ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter12",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Alter12 ::= Constraint Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter12",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Alter12 ::= If Exists Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter12",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Alter12 ::= Constraint If Exists Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter12",96, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Alter11 ::= Drop Alter12 Alter15 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter11",95, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Alter11 ::= Add Create12 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter11",95, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Alter11 ::= Add Create13 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter11",95, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Alter3 ::= Alter11 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter3",87, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Alter3 ::= Alter Column object Alter8 Alter11 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter3",87, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Alter5 ::= Current 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter5",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Alter5 ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter5",89, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Alter19 ::= Collate Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter19",103, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Alter19 ::= Modify Name Operador Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter19",103, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Alter4 ::= Identificador 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter4",88, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Alter1 ::= Database Alter5 Alter19 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter1",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Alter1 ::= User Alter4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter1",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Alter1 ::= Table object Alter3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter1",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Alter1 ::= View Alter2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Alter1",85, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // opcionAlter ::= Alter Alter1 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionAlter",4, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Delete13 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete13",117, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Delete13 ::= Comma Identificador Delete13 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete13",117, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Delete12 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete12",116, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Delete12 ::= Identificador Delete13 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete12",116, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Delete11 ::= Identificador Delete12 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete11",115, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Delete11 ::= At Identificador Delete12 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete11",115, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Delete10 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete10",114, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Delete10 ::= Into Delete11 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete10",114, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Delete9 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete9",113, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Delete9 ::= Comma Delete6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete9",113, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Delete8 ::= Delete9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete8",112, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Delete8 ::= As Identificador Delete9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete8",112, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Delete6 ::= AgFunction ParentesisA Sel5 ParentesisC Delete8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete6",110, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Delete6 ::= Identificador Delete8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete6",110, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Delete15 ::= AgFunction ParentesisA Sel5 ParentesisC Operador constant 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete15",119, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Delete15 ::= expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete15",119, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Delete7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete7",111, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Delete7 ::= Where Delete15 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete7",111, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Delete5 ::= Inner Join Delete4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete5",109, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Delete5 ::= Delete7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete5",109, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Delete5 ::= Output Delete6 Delete7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete5",109, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Delete4 ::= At Identificador Delete5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete4",108, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Delete4 ::= object Delete5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete4",108, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Delete3 ::= Delete4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete3",107, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Delete3 ::= From Delete4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete3",107, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Delete2 ::= Delete3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete2",106, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Delete2 ::= Percent Delete3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete2",106, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Delete1 ::= Delete3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete1",105, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Delete1 ::= Top ParentesisA Entero ParentesisC Delete2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Delete1",105, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // opcionDelete ::= Delete Delete1 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionDelete",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Update6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update6",125, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Update6 ::= Comma expression Update6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update6",125, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Update7 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update7",126, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Update7 ::= Output Delete6 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update7",126, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Update10 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update10",129, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Update10 ::= Comma object Update10 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update10",129, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Update8 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update8",127, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Update8 ::= From object Update10 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update8",127, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Update9 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update9",128, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Update9 ::= Where expression 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update9",128, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Update4 ::= Set expression Update6 Update7 Update8 Update9 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update4",123, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Update3 ::= At Identificador Update4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update3",122, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Update3 ::= object Update4 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update3",122, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Update2 ::= Update3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update2",121, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Update2 ::= Percent Update3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update2",121, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Update1 ::= Update3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update1",120, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Update1 ::= Top ParentesisA Entero ParentesisC Update2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Update1",120, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // opcionUpdate ::= Update Update1 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionUpdate",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Proc8 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Proc8 ::= opcionTruncate Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Proc8 ::= opcionDrop Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Proc8 ::= opcionSelect Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Proc8 ::= opcionInsert Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Proc8 ::= opcionCreate Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Proc8 ::= opcionAlter Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Proc8 ::= opcionDelete Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Proc8 ::= opcionUpdate Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc8",138, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Proc7 ::= As Proc8 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc7",137, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Proc7 ::= As Begin Proc8 End 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc7",137, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-3)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Proc6 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc6",136, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Proc6 ::= Output 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc6",136, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Proc5 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc5",135, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Proc5 ::= Comma At Identificador Create14 Proc6 Proc5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc5",135, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-5)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Proc4 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc4",134, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Proc4 ::= At Identificador Create14 Proc6 Proc5 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc4",134, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Proc3 ::= object Proc4 Proc7 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc3",133, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Proc2 ::= Proc3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc2",132, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Proc2 ::= Procedure Proc3 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc2",132, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Proc1 ::= Proc2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc1",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Proc1 ::= Or Alter Proc2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Proc1",131, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // opcionProcedure ::= Create Proc1 FIN 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("opcionProcedure",130, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Programa2 ::= 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Programa2 ::= opcionTruncate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Programa2 ::= opcionDrop Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Programa2 ::= opcionSelect Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Programa2 ::= opcionInsert Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Programa2 ::= opcionCreate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Programa2 ::= opcionAlter Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Programa2 ::= opcionDelete Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Programa2 ::= opcionUpdate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Programa2 ::= opcionProcedure Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa2",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Programa ::= opcionTruncate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Programa ::= opcionDrop Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Programa ::= opcionSelect Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Programa ::= opcionInsert Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Programa ::= opcionCreate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Programa ::= opcionAlter Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Programa ::= opcionDelete Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Programa ::= opcionUpdate Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Programa ::= opcionProcedure Programa2 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("Programa",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Programa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		RESULT = start_val;
              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Syntax$parser.done_parsing();
          return CUP$Syntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

