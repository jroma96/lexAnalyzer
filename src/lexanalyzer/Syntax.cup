package lexanalyzer;
import java_cup.runtime.Symbol;

parser code{:
    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:}; 

terminal ParentesisA, Positivo, Negativo, Comma, PuntoComma, ParentesisC, At, Comentario, Comentario_Incompleto, Select, From, Into,
Insert, Top, Where, Drop, OpenQuery, OpenRowset, Values, DefaultValues, Default, Null, And, Not, Or, All, Some, Like,
Between, In, If, Exists, Sum, Distinct, FinSentencia, Identificador, Decimal, Entero, String, Boolean, Operador, ERROR, Punto, Login, 
Index, View, Database, Table, On, Star, Inner, Join, Count, Max, Min, Day, Year, Month, Order, By, As, Create, User, 
Unique, Truncate, Clustered, NonClustered, Object, Asc, Desc, Include;

non terminal Programa, Programa2, opcionSelect, opcionInsert, opcionDrop, opcionCreate, opcionTruncate, A, B, C, object, rowsetFunc, oRowset, F, E, columnList, M, L, N, 
O, P, expression, constant, operadorB, expression2, S, DropB, DropC, DropD, DropE, DropF, DropX, DropG, DropH, DropK, DropL, DropJ, DropM, DropN, DropO, 
DropObject, DropObject2, DropZ, expressionTemp, Sel1, Sel2, Sel3, Sel4, Sel5, Sel6, Sel7, AgFunction, Create1,
Create2, Create3, Create4, Create5, Create6, Create7, Create8, Create9, Create10, Create11, Create12, 
Create13, Create14, Create15, FIN;

start with Programa;
Programa ::= opcionInsert Programa2 | opcionSelect Programa2 | opcionDrop Programa2 | opcionTruncate Programa2
;
Programa2 ::= opcionCreate Programa2 | opcionInsert Programa2 | opcionSelect Programa2 | opcionDrop Programa2 | opcionTruncate Programa2 | /*epsilon*/
;
opcionCreate ::= Create Create1 FIN 
;
Create1 ::= Table Create11 | User object | Database object | Create2 Create4 
;
Create2 ::= Unique Create3 | Create3
;
Create3 ::= Clustered | NonClustered
;
Create4 ::= Index Identificador On object Create5 
;
Create5 ::= ParentesisA Create6 
;
Create6 ::= Identificador Create7 Create8 
;
Create7 ::= Asc | Desc | /*epsilon*/ 
;
Create8 ::= Comma Create6 | Create9
;
Create9 ::= Include ParentesisA Identificador Create10 ParentesisC
;
Create10 ::= Comma Identificador Create10 | /*epsilon*/
;
Create11 ::= object Create12
;
Create12 ::= 
;
opcionSelect ::= Select Sel1 From Sel3 Sel6 Sel7 FIN
;
Sel6 ::= /*epsilon*/ | Where AgFunction ParentesisA Sel5 ParentesisC Operador constant | Where expression
;
Sel7 ::= Order By object | /*epsilon*/
;
Sel1 ::= Star Sel2 | expression Sel2 | AgFunction ParentesisA Sel5 ParentesisC Sel2
;
Sel5 ::= Star | expression
;
AgFunction ::= Count | Max | Min | Day | Month | Year
;
Sel2 ::= Comma Star Sel2 | Comma expression Sel2 | Comma AgFunction ParentesisA Sel5 ParentesisC Sel2 | As Identificador | /*epsilon*/
;
Sel3 ::= object Sel4
;
Sel4 ::= Inner Join object Sel4 | /*epsilon*/
;
opcionTruncate ::= Truncate Table object FIN
;
opcionInsert ::= A
;
opcionDrop ::= Drop Login DropB FIN | Drop Index DropF FIN | Drop Table DropC FIN | Drop View DropE FIN | Drop Database DropD FIN
;
DropB ::= Identificador
;
DropC ::= If Exists DropG | DropG
;
DropG ::= Identificador DropH | Identificador Punto Identificador DropH | Identificador Punto Identificador Punto Identificador DropH
;
DropH ::= Comma Identificador DropH | Comma Identificador Punto Identificador DropH | Comma Identificador Punto Identificador Punto Identificador DropH | /*epsilon*/
;
DropF ::= If Exists DropX | DropX
;
DropX ::= Identificador On DropObject DropObject2 | DropObject
;
DropObject ::= Identificador | Identificador Punto Identificador | Identificador Punto Identificador Punto Identificador
;
DropObject2 ::= Comma DropX | /*epsilon*/
;
DropD ::= If Exists DropJ | DropJ
;
DropJ ::= Identificador DropK
;
DropK ::= Comma Identificador DropK | /*epsilon*/
;
DropE ::= If Exists DropL | DropL
;
DropL ::= Identificador Punto DropM | DropM
;
DropM ::= Identificador DropN
;
DropN ::= Comma DropL | /*epsilon*/
;
A ::= Insert Top ParentesisA Entero ParentesisC B FIN | Insert B FIN
;
B ::= Into C | C
;
C ::= object E | rowsetFunc E
;
object ::= Identificador | Identificador Punto Identificador | Identificador Punto Identificador Punto Identificador | Identificador Punto Identificador Punto Identificador Punto Identificador
;
rowsetFunc ::= OpenQuery ParentesisA Identificador Comma String ParentesisC | oRowset
;
oRowset ::= OpenRowset ParentesisA String Comma String Comma F ParentesisC | OpenRowset ParentesisA String Comma String PuntoComma String PuntoComma String Comma F ParentesisC
;
F ::= Identificador | Identificador Punto Identificador | Identificador Punto Identificador Punto Identificador | String
;
E ::= ParentesisA columnList ParentesisC L | L
;
columnList ::= Identificador M
;
M ::= Comma Identificador M | /*epsilon*/
;
L ::= Values N | DefaultValues
;
N ::= ParentesisA Default O ParentesisC P | ParentesisA Null O ParentesisC P | ParentesisA expression O ParentesisC P
;
O ::= Comma Default O | Comma Null O | Comma expression O | /*epsilon*/
;
P ::= ParentesisA Default O ParentesisC P | ParentesisA Null O ParentesisC P | ParentesisA expression O ParentesisC P | /*epsilon*/
;
expression ::= constant | Identificador | Identificador Punto Identificador | At Identificador | ParentesisA expression ParentesisC | Positivo expression | Negativo expression| expression2 | expressionTemp Operador expression
;
expressionTemp ::= object
;
constant::= String | Decimal | Entero 
;
expression2 ::= Sum ParentesisA S expression ParentesisC
;
S ::= All | Distinct | /*epsilon*/
;
FIN ::= FinSentencia
;